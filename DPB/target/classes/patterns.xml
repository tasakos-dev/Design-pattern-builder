<GoF>
	<category id="creational">
		<pattern id="Abstract factory">
			<interface id="AbstractFactory">
					<method id="createProductA">
						<type>Object</type>
					</method>
					<method id="createProductB">
						<type>Object</type>
					</method>
			</interface>
			<class id="concreteFactory1" implements="AbstractFactory">
			</class>
			<class id="concreteFactory2" implements="AbstractFactory">
			</class>
			<properties>
				<preferedClassname>concreteFactory</preferedClassname>
			</properties>
		</pattern>
		<pattern id="Builder">
			<interface id="Builder">
				<method id="buildPart">
					<type>void</type>
				</method>
			</interface>
			<class id="ConcreteBuilder" implements="Builder"></class>
		</pattern>
		<pattern id="Factory Method">
			<class id="Creator" isAbstract="true">
					<method id="factoryMethod" isAbstract="true">
						<type>Object</type>
					</method>
					<method id="anOperation">
						<type>void</type>
					</method>
			</class>
			<class id="concreteCreator" extends="FactoryMethod">
			</class>
			<properties>
				<preferedClassName>concreteCreator</preferedClassName>
			</properties>
		</pattern>
		<pattern id="Parameterized factory method">
			<class id="Creator">
					<method id="factoryMethod">
						<type>Object</type>
						<parameter id="id">
							<type>int</type>
						</parameter>
					</method>
			</class>	
		</pattern>
		<pattern id="Prototype">
			<interface id="Prototype">
				<method id="clone">
					<type>Prototype</type>
					<code>
						return super.clone();
					</code>
				</method>
			</interface>
			<class id="ConcretePrototype1" implements="Prototype">
				<method id="clone">
					<type>Prototype</type>
					<code>
						try {
							return (Prototype) super.clone();
						} catch (CloneNotSupportedException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
						return null;
					</code>
				</method>
			</class>
			<class id="ConcretePrototype2" implements="Prototype">
				<method id="clone">
					<type>Prototype</type>
					<code>
						try {
							return (Prototype) super.clone();
						} catch (CloneNotSupportedException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
						return null;
					</code>
				</method>
			</class>
		</pattern>
		<pattern id="Singleton">
			<class id="Singleton">
				<field id="instance" isStatic="true">
					<type>Singleton</type>
				</field>
				<method id="getInstance" isStatic="true">
					<type>Object</type>
					<code>
						if (instance == null) {
							instance = new Singleton();
						}
						return instance;
					</code>
				</method>
			</class>
		</pattern>
	</category>
	<category id="creational1">
		<pattern id="parametirized1 factory">
		</pattern>
	</category>
</GoF>